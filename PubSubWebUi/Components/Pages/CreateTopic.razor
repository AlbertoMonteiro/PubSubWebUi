@page "/create-topic"
@using PubSubWebUi.Services
@inject IPubSubService PubSubService

<h3>Create Topic</h3>

<EditForm Model="@topicModel" OnValidSubmit="HandleValidSubmit" FormName="createTopicForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="projectId" class="form-label">Project ID</label>
        <InputText id="projectId" class="form-control" @bind-Value="topicModel.ProjectId" />
    </div>
    <div class="mb-3">
        <label for="topicName" class="form-label">Topic Name</label>
        <InputText id="topicName" class="form-control" @bind-Value="topicModel.TopicName" />
    </div>
    <button type="submit" class="btn btn-primary">Create Topic</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert @alertClass mt-3">@message</div>
}

@code {
    [SupplyParameterFromForm]
    private TopicModel? topicModel { get; set; }
    private string? message;
    private string alertClass = "alert-success";

    protected override void OnInitialized() => topicModel ??= new();

    private async Task HandleValidSubmit()
    {
        try
        {
            if (topicModel is null)
                return;

            var response = await PubSubService.CreateTopicAsync(topicModel.ProjectId, topicModel.TopicName);
            if (response.IsSuccessStatusCode)
            {
                message = $"Topic '{topicModel.TopicName}' created successfully!";
                alertClass = "alert-success";
                topicModel = new(); // Limpa o formulário
            }
            else
            {
                message = $"Error: {response.Error.Message}\n{response.Error.Content}";
                alertClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
            alertClass = "alert-danger";
        }
    }

    public class TopicModel
    {
        [EditorRequired]
        public string ProjectId { get; set; } = string.Empty;
        [EditorRequired]
        public string TopicName { get; set; } = string.Empty;
    }
}
